import React from 'react';
import {
    MDBBtn,
    MDBContainer,
    MDBRow,
    MDBCol,
    MDBCard,
    MDBCardBody,
    MDBCardImage,
    MDBInput,
    MDBIcon,
    MDBCheckbox,
    MDBTable
}
    from 'mdb-react-ui-kit';
import myImage from '../../assets/logo_.png';

import { useState } from 'react';
import { useEffect } from 'react';
import { NavLink } from 'react-router-dom';
import { useAppContextDept } from '../../Context/Context';

import NavBar from '../../Components/NavBar';

function UpdateDeptById() {

    const { stateDept, dispatchDept } = useAppContextDept();
    const [department, setDepartment] = useState({ id: null, deptName: '' });
    const [originalDeptName, setOriginalDeptName] = useState(''); // State for the original department name



     // Function to handle changes in the department name
  const handleNameChange = (e) => {
    setDepartment({ ...department, deptName: e.target.value });
    dispatchDept({ type: 'SET_deptName', payload: e.target.value });

  };



    useEffect(() => {
        // Fetch the given department from your API here
        // Replace 'your-api-endpoint' with the actual endpoint to fetch a department
        const URL = `http://localhost:9090/api/department/${requiredDeptId}`;
        fetch(URL)
            .then((response) => response.json())
            .then((data) => {
                if (data) {
                  setDepartment(data);
                  setOriginalDeptName(data.deptName); // Set the original value
                } else {
                  console.error('Department data not found');
                }
              })
            .catch((error) => console.error('Error fetching departments:', error));
    }, [setDepartment]);

    


    const requiredDeptId=JSON.parse(sessionStorage.getItem("UpdatabledeptId")); 
    const requiredDeptName=sessionStorage.getItem("UpdatabledeptName");

   
   
  
  





      const handleUpdate = async () => {
        // console.log();
        // alert("handleUpdate");

        if (department.deptName !== originalDeptName) {
            // The department name has been updated; handle the update here
            console.log('Updated department name:', department.deptName);
            try {
                const URL=`http://localhost:9090/api/department/${requiredDeptId}`;
                
              const response = await fetch(URL, {
                method: 'PUT',
                headers: {
                  'Content-Type': 'application/json',
                },
                body: JSON.stringify(stateDept), // Send the form data as JSON
              });
        
              if (response.ok) {
                // Handle a successful response from the server
                console.log('Data UPDATED successfully');
                alert("Department updated");

                console.log(stateDept);
                console.log(response);
    
              } else {
                // Handle errors from the server
                console.error('Error sending data to the server');
              }
            } catch (error) {
              console.error('An error occurred while sending data:', error);
            }
          } else {
            // The department name remains the same as the original value
            console.log('Department name was not updated:', originalDeptName);
            alert("No changes are made");
          }
       

        // const { stateDept } = useAppContext();

       
      };

    return (
        <>
        <NavBar></NavBar>
        <MDBContainer fluid>
        <NavLink to="/registeremp">   <button type="button" class="btn btn-danger" >Go To Department form</button></NavLink>

<NavLink to="/getalldept">   <button type="button" class="btn btn-info" >Get All Dept</button></NavLink>
<NavLink to="/updatedeptbyid">   <button type="button" class="btn btn-info" >Update Dept By Id</button></NavLink>
<NavLink to="/deletedeptbyid">   <button type="button" class="btn btn-info" >DeleteDeptById</button></NavLink>



            <MDBCard className='text-black m-5' style={{ borderRadius: '25px' }}>
                <MDBCardBody>
                    <MDBRow>
                        <MDBCol md='10' lg='6' className='order-2 order-lg-1 d-flex flex-column align-items-center'>

                            <span className="h1 fw-bold mb-0">Update Department</span>
                            <br></br>
          


<h6>ID is Autogenerated</h6>


                            <div className="d-flex flex-row align-items-center mb-4">
                                <MDBIcon fas icon="envelope me-3" size='lg' />
                                <MDBInput label='id' id='form2' type='text' value={department.id}  readOnly onChange={handleNameChange}
/>
                            </div>


                            <div className="d-flex flex-row align-items-center mb-4">
                                <MDBIcon fas icon="envelope me-3" size='lg' />
                                <MDBInput label='Name' id='form2' type='text' value={department.deptName} onChange={handleNameChange}
/>
                            </div>




<button type="button" class="btn btn-success" onClick={handleUpdate}>Update Department</button>


                        </MDBCol>

                        <MDBCol md='10' lg='6' className='order-1 order-lg-2 d-flex align-items-center'>
                            <MDBCardImage src={myImage} fluid />

                        </MDBCol>

                    </MDBRow>
                </MDBCardBody>
            </MDBCard>

        </MDBContainer>

        </>
    );
}

export default UpdateDeptById;